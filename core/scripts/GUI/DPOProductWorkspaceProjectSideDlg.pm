# generated by wxGlade 0.6.8 on Thu Mar 26 14:00:17 2015
#
# To get wxPerl visit http://wxPerl.sourceforge.net/
#

use Wx 0.15 qw[:allclasses];
use strict;
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package DPOProductWorkspaceProjectSideDlg;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;
use Wx::Locale 'gettext' => '_T', 'gettext_noop' => 'gettext_noop';


sub new {
    my( $self, $product_frame, $project_to_show, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: DPOProductWorkspaceProjectSideDlg::new
    $style = wxDEFAULT_DIALOG_STYLE 
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->{tree_ctrl_dependencies_dynamic} = Wx::TreeCtrl->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxTR_LINES_AT_ROOT|wxTR_HIDE_ROOT|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER);
    $self->{sizer_50_staticbox} = Wx::StaticBox->new($self, wxID_ANY, _T("Dynamic side") );
    $self->{tree_ctrl_dependencies_static} = Wx::TreeCtrl->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxTR_LINES_AT_ROOT|wxTR_HIDE_ROOT|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER);
    $self->{sizer_55_staticbox} = Wx::StaticBox->new($self, wxID_ANY, _T("Static side") );
    $self->{button_ok} = Wx::Button->new($self, wxID_ANY, _T("Ok"));

    $self->__set_properties();
    $self->__do_layout();

    Wx::Event::EVT_BUTTON($self, $self->{button_ok}->GetId, \&on_button_ok);

    # end wxGlade

    $product_frame->fill_tree_working_ext(
            $project_to_show,
            $self->{tree_ctrl_dependencies_dynamic},
            $self->{tree_ctrl_dependencies_static});

    #~ $project_to_show->show();

    my $root_item = $self->{tree_ctrl_dependencies_dynamic}->GetRootItem();
    $self->{tree_ctrl_dependencies_dynamic}->ExpandAllChildren($root_item);

    $root_item = $self->{tree_ctrl_dependencies_static}->GetRootItem();
    $self->{tree_ctrl_dependencies_static}->ExpandAllChildren($root_item);

    $self->SetTitle($self->GetTitle() . " - $project_to_show->{name}");

    return $self;
}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: DPOProductWorkspaceProjectSideDlg::__set_properties
    $self->SetTitle(_T("Static/Dymanic side"));
    $self->{tree_ctrl_dependencies_dynamic}->SetMinSize(Wx::Size->new(200, 400));
    $self->{tree_ctrl_dependencies_static}->SetMinSize(Wx::Size->new(200, 400));
    # end wxGlade
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: DPOProductWorkspaceProjectSideDlg::__do_layout
    $self->{sizer_30} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_51} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_52} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_55_staticbox}->Lower();
    $self->{sizer_55} = Wx::StaticBoxSizer->new($self->{sizer_55_staticbox}, wxHORIZONTAL);
    $self->{sizer_50_staticbox}->Lower();
    $self->{sizer_50} = Wx::StaticBoxSizer->new($self->{sizer_50_staticbox}, wxHORIZONTAL);
    $self->{sizer_50}->Add($self->{tree_ctrl_dependencies_dynamic}, 1, wxEXPAND, 0);
    $self->{sizer_52}->Add($self->{sizer_50}, 1, wxALL|wxEXPAND, 5);
    $self->{sizer_55}->Add($self->{tree_ctrl_dependencies_static}, 1, wxEXPAND, 0);
    $self->{sizer_52}->Add($self->{sizer_55}, 1, wxALL|wxEXPAND, 5);
    $self->{sizer_30}->Add($self->{sizer_52}, 1, wxEXPAND, 0);
    $self->{sizer_51}->Add($self->{button_ok}, 0, 0, 0);
    $self->{sizer_30}->Add($self->{sizer_51}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    $self->SetSizer($self->{sizer_30});
    $self->{sizer_30}->Fit($self);
    $self->Layout();
    # end wxGlade
}

sub on_button_ok
{
    my ($self, $event) = @_;

    $self->EndModal(Wx::wxID_OK);

    return;

    # wxGlade: DPOProductWorkspaceProjectSideDlg::on_button_ok <event_handler>
    warn "Event handler (on_button_ok) not implemented";
    $event->Skip;
    # end wxGlade
}


# end of class DPOProductWorkspaceProjectSideDlg

1;

