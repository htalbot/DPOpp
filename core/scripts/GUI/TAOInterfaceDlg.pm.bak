# generated by wxGlade 0.6.8 on Fri Sep 11 13:32:51 2015
#
# To get wxPerl visit http://wxPerl.sourceforge.net/
#

use Wx 0.15 qw[:allclasses];
use strict;
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package TAOInterfaceDlg;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;
use Wx::Locale 'gettext' => '_T', 'gettext_noop' => 'gettext_noop';


sub new {
    my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: TAOInterfaceDlg::new
    $style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxTHICK_FRAME 
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->{label_choice} = Wx::StaticText->new($self, wxID_ANY, _T("Choose the interface:"), wxDefaultPosition, wxDefaultSize, );
    $self->{combo_box_interface} = Wx::ComboBox->new($self, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, [], wxCB_DROPDOWN|wxCB_DROPDOWN);
    $self->{label_info} = Wx::StaticText->new($self, wxID_ANY, _T("If you don't find the desired interface \nin the combobox, make sure \nthat *_ROOT env. var. is defined\nfor the expected interface. Also, \nmake sure you have a correct \nenvironment which knows the\nenvironment variable (*_ROOT) of\nthe interface."), wxDefaultPosition, wxDefaultSize, );
    $self->{button_ok_copy} = Wx::Button->new($self, wxID_ANY, _T("Ok"));
    $self->{button_cancel} = Wx::Button->new($self, wxID_CANCEL, _T("Cancel"));

    $self->__set_properties();
    $self->__do_layout();

    Wx::Event::EVT_BUTTON($self, $self->{button_ok_copy}->GetId, \&on_button_ok);
    Wx::Event::EVT_BUTTON($self, wxID_CANCEL, \&on_button_cancel);

    # end wxGlade
    return $self;

}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: TAOInterfaceDlg::__set_properties
    $self->SetTitle(_T("TAO_interface"));
    $self->{combo_box_interface}->SetSelection(-1);
    # end wxGlade
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: TAOInterfaceDlg::__do_layout
    $self->{sizer_1} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_7} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_2} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_2}->Add($self->{label_choice}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    $self->{sizer_2}->Add($self->{combo_box_interface}, 0, wxALL|wxEXPAND, 5);
    $self->{sizer_2}->Add($self->{label_info}, 1, wxALL|wxEXPAND, 10);
    $self->{sizer_1}->Add($self->{sizer_2}, 1, wxEXPAND, 0);
    $self->{sizer_7}->Add($self->{button_ok_copy}, 0, wxALL, 5);
    $self->{sizer_7}->Add($self->{button_cancel}, 0, wxALL, 5);
    $self->{sizer_1}->Add($self->{sizer_7}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    $self->SetSizer($self->{sizer_1});
    $self->{sizer_1}->Fit($self);
    $self->Layout();
    # end wxGlade
}

sub set_interfaces
{
    my ($self, $interfaces_ref) = @_;

    foreach my $module (sort @{$interfaces_ref})
    {
        foreach my $itf (@{$module->{interfaces}})
        {
            my $text = "$module->{module_name}:$itf";
            $self->{combo_box_interface}->Append($text);
        }
    }
}


####eeeeeeeeeeevent handlers
sub on_button_ok
{
    my ($self, $event) = @_;

    #~ my $sel = $self->{list_box_interfaces}->GetSelection();
    my $sel = $self->{combo_box_interface}->GetSelection();

    if ($sel == Wx::wxNOT_FOUND)
    {
        Wx::MessageBox(
                "You must select an interface.",
                "Importing",
                Wx::wxOK | Wx::wxICON_ERROR);

        $event->Skip;
        return;
    }

    $self->EndModal(Wx::wxID_OK);

    return;

    # wxGlade: TAOInterfaceDlg::on_button_ok <event_handler>
    warn "Event handler (on_button_ok) not implemented";
    $event->Skip;
    # end wxGlade
}


sub on_button_cancel
{
    my ($self, $event) = @_;

    $self->EndModal(Wx::wxID_CANCEL);

    return;

    # wxGlade: TAOInterfaceDlg::on_button_cancel <event_handler>
    warn "Event handler (on_button_cancel) not implemented";
    $event->Skip;
    # end wxGlade
}


# end of class TAOInterfaceDlg

1;

