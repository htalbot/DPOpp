# generated by wxGlade 0.6.8 on Fri Sep 18 19:02:18 2015
#
# To get wxPerl visit http://wxPerl.sourceforge.net/
#

use Wx 0.15 qw[:allclasses];
use strict;
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package DPOHeaderImplOrAbstractClassToIncludeInWorkspaceDlg;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;
use Wx::Locale 'gettext' => '_T', 'gettext_noop' => 'gettext_noop';


sub new {
    my( $self, $header_impl_or_abstract_class, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: DPOHeaderImplOrAbstractClassToIncludeInWorkspaceDlg::new
    $style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxTHICK_FRAME 
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->{text_ctrl_info} = Wx::TextCtrl->new($self, wxID_ANY, _T("Implementation in header or abstract class usually don't need to be built to generate library (pseudo). However, if for any reason you want to include one of them in the workspace, note that the pseudo library is deleted after being built (there is no reason to keep it)."), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY);
    $self->{list_ctrl_header_impl_or_abstract_class} = Wx::ListCtrl->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER);
    $self->{button_include_in_workspace_to_build} = Wx::Button->new($self, wxID_ANY, _T("Include selection into workspace (to build)"));
    $self->{button_dont_include_anything} = Wx::Button->new($self, wxID_ANY, _T("Don't include anything"));
    $self->{sizer_105_staticbox} = Wx::StaticBox->new($self, wxID_ANY, _T("Selection") );

    $self->__set_properties();
    $self->__do_layout();

    Wx::Event::EVT_BUTTON($self, $self->{button_include_in_workspace_to_build}->GetId, \&on_button_include_in_workspace_to_build);
    Wx::Event::EVT_BUTTON($self, $self->{button_dont_include_anything}->GetId, \&on_button_dont_include_anything);

    # end wxGlade

    $self->{header_impl_or_abstract_class} = $header_impl_or_abstract_class;
    $self->{projects_to_include} = [];
    $self->create_list_ctrl();

    $self->{button_dont_include_anything}->SetDefault();

    return $self;

}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: DPOHeaderImplOrAbstractClassToIncludeInWorkspaceDlg::__set_properties
    $self->SetTitle(_T("Header implementation / Abstract class"));
    # end wxGlade
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: DPOHeaderImplOrAbstractClassToIncludeInWorkspaceDlg::__do_layout
    $self->{sizer_104} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_105_staticbox}->Lower();
    $self->{sizer_105} = Wx::StaticBoxSizer->new($self->{sizer_105_staticbox}, wxHORIZONTAL);
    $self->{sizer_104}->Add($self->{text_ctrl_info}, 0, wxALL|wxEXPAND, 5);
    $self->{sizer_104}->Add($self->{list_ctrl_header_impl_or_abstract_class}, 1, wxALL|wxEXPAND, 5);
    $self->{sizer_105}->Add($self->{button_include_in_workspace_to_build}, 0, wxLEFT, 5);
    $self->{sizer_105}->Add($self->{button_dont_include_anything}, 0, wxLEFT, 5);
    $self->{sizer_104}->Add($self->{sizer_105}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    $self->SetSizer($self->{sizer_104});
    $self->{sizer_104}->Fit($self);
    $self->Layout();
    # end wxGlade
}

sub create_list_ctrl
{
    my ($self) = @_;

    my $col = Wx::ListItem->new();
    $col->SetId(0);
    $col->SetText("Project");
    $col->SetWidth(130);
    $self->{list_ctrl_header_impl_or_abstract_class}->InsertColumn(0, $col);

    my $i = 0;
    foreach my $project (@{$self->{header_impl_or_abstract_class}})
    {
        my $item = Wx::ListItem->new();

        $item->SetId($i);
        $item->SetText($project->{name});
        $self->{list_ctrl_header_impl_or_abstract_class}->InsertItem($item);

        $i++;
    }
}

# Eeeeeeeeevent handlers
sub on_button_include_in_workspace_to_build
{
    my ($self, $event) = @_;

    my $i = -1;
    for ( ;; )
    {
        $i = $self->{list_ctrl_header_impl_or_abstract_class}->GetNextItem($i,
                                    Wx::wxLIST_NEXT_ALL,
                                    Wx::wxLIST_STATE_SELECTED);
        if ( $i == -1 )
        {
            last;
        }

        my $project_name = $self->{list_ctrl_header_impl_or_abstract_class}->GetItemText($i);

        foreach my $project (@{$self->{header_impl_or_abstract_class}})
        {
            if ($project->{name} eq $project_name)
            {
                push(@{$self->{projects_to_include}}, $project);
                last;
            }
        }
    }

    $self->EndModal(Wx::wxID_OK);

    return;

    # wxGlade: DPOHeaderImplOrAbstractClassToIncludeInWorkspaceDlg::on_button_include_in_workspace_to_build <event_handler>
    warn "Event handler (on_button_include_in_workspace_to_build) not implemented";
    $event->Skip;
    # end wxGlade
}

sub on_button_dont_include_anything
{
    my ($self, $event) = @_;

    $self->EndModal(Wx::wxID_CANCEL);

    return;

    # wxGlade: DPOHeaderImplOrAbstractClassToIncludeInWorkspaceDlg::on_button_dont_include_anything <event_handler>
    warn "Event handler (on_button_dont_include_anything) not implemented";
    $event->Skip;
    # end wxGlade
}

# end of class DPOHeaderImplOrAbstractClassToIncludeInWorkspaceDlg

1;

