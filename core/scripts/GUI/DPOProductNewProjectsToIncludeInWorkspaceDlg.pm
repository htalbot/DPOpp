# generated by wxGlade 0.6.8 on Wed Sep 16 04:39:34 2015
#
# To get wxPerl visit http://wxPerl.sourceforge.net/
#

use Wx 0.15 qw[:allclasses];
use strict;
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package DPOProductNewProjectsToIncludeInWorkspaceDlg;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;
use Wx::Locale 'gettext' => '_T', 'gettext_noop' => 'gettext_noop';


sub new {
    my( $self, $project_name, $projects_names, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: DPOProductNewProjectsToIncludeInWorkspaceDlg::new
    $style = wxDEFAULT_DIALOG_STYLE 
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->{list_ctrl_new_projects} = Wx::ListCtrl->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER);
    $self->{button_select_all} = Wx::Button->new($self, wxID_ANY, _T("Select all"));
    $self->{button_deselect_all} = Wx::Button->new($self, wxID_ANY, _T("Deselect all"));
    $self->{button_include} = Wx::Button->new($self, wxID_ANY, _T("Include"));
    $self->{button_cancel} = Wx::Button->new($self, wxID_ANY, _T("Don't include anything"));

    $self->__set_properties();
    $self->__do_layout();

    Wx::Event::EVT_BUTTON($self, $self->{button_select_all}->GetId, \&on_button_select_all);
    Wx::Event::EVT_BUTTON($self, $self->{button_deselect_all}->GetId, \&on_button_deselect_all);
    Wx::Event::EVT_BUTTON($self, $self->{button_include}->GetId, \&on_button_include);
    Wx::Event::EVT_BUTTON($self, $self->{button_cancel}->GetId, \&on_button_cancel);

    # end wxGlade

    $self->{project_name} = $project_name;
    $self->{projects_names} = $projects_names;
    $self->{selected_projects_names} = [];

    $self->create_list_ctrl();

    return $self;

}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: DPOProductNewProjectsToIncludeInWorkspaceDlg::__set_properties
    $self->SetTitle(_T("New projects to include into workspace"));
    $self->{list_ctrl_new_projects}->SetMinSize(Wx::Size->new(300, 80));
    # end wxGlade

    $self->{list_ctrl_new_projects}->SetMinSize(Wx::Size->new(300, 80));
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: DPOProductNewProjectsToIncludeInWorkspaceDlg::__do_layout
    $self->{sizer_65} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_100} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_102} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_101} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_102}->Add($self->{list_ctrl_new_projects}, 4, wxEXPAND, 0);
    $self->{sizer_101}->Add($self->{button_select_all}, 0, wxALL, 5);
    $self->{sizer_101}->Add($self->{button_deselect_all}, 0, wxALL, 5);
    $self->{sizer_102}->Add($self->{sizer_101}, 1, wxALIGN_CENTER_VERTICAL, 5);
    $self->{sizer_65}->Add($self->{sizer_102}, 1, wxEXPAND, 0);
    $self->{sizer_100}->Add($self->{button_include}, 0, 0, 0);
    $self->{sizer_100}->Add($self->{button_cancel}, 0, wxLEFT, 5);
    $self->{sizer_65}->Add($self->{sizer_100}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    $self->SetSizer($self->{sizer_65});
    $self->{sizer_65}->Fit($self);
    $self->Layout();
    # end wxGlade
}

sub create_list_ctrl
{
    my ($self) = @_;

    my $col = Wx::ListItem->new();
    $col->SetId(0);
    $col->SetText("Project");
    $col->SetWidth(130);
    $self->{list_ctrl_new_projects}->InsertColumn(0, $col);

    my $item = Wx::ListItem->new();
    $item->SetId(0);
    $item->SetText($self->{project_name});
    $self->{list_ctrl_new_projects}->InsertItem( $item );
    $self->{list_ctrl_new_projects}->SetItemState(0, wxLIST_STATE_SELECTED, wxLIST_STATE_SELECTED);

    my $i = 1;
    foreach my $project_name (@{$self->{projects_names}})
    {
        my $item = Wx::ListItem->new();
        $item->SetId($i);
        $item->SetText($project_name);
        $self->{list_ctrl_new_projects}->InsertItem( $item );
        $i++;
    }
}


####eeeeeeeeeevent handlers
sub on_button_include
{
    my ($self, $event) = @_;

    my $i = -1;
    for ( ;; )
    {
        $i = $self->{list_ctrl_new_projects}->GetNextItem($i,
                                    Wx::wxLIST_NEXT_ALL,
                                    Wx::wxLIST_STATE_SELECTED);
        if ( $i == -1 )
        {
            last;
        }

        my $project_name = $self->{list_ctrl_new_projects}->GetItemText($i);
        push(@{$self->{selected_projects_names}}, $project_name);
    }

    $self->EndModal(Wx::wxID_CANCEL);

    return;

    # wxGlade: DPOProductNewProjectsToIncludeInWorkspaceDlg::on_button_include <event_handler>
    warn "Event handler (on_button_include) not implemented";
    $event->Skip;
    # end wxGlade
}


sub on_button_cancel
{
    my ($self, $event) = @_;

    $self->EndModal(Wx::wxID_CANCEL);

    return;

    # wxGlade: DPOProductNewProjectsToIncludeInWorkspaceDlg::on_button_cancel <event_handler>
    warn "Event handler (on_button_cancel) not implemented";
    $event->Skip;
    # end wxGlade
}



sub on_button_select_all
{
    my ($self, $event) = @_;

    my $i = -1;
    for ( ;; )
    {
        $i = $self->{list_ctrl_new_projects}->GetNextItem($i,
                                    Wx::wxLIST_NEXT_ALL,
                                    Wx::wxLIST_STATE_DONTCARE);
        if ( $i == -1 )
        {
            last;
        }

        $self->{list_ctrl_new_projects}->SetItemState($i, wxLIST_STATE_SELECTED, wxLIST_STATE_SELECTED);
    }

    return;

    # wxGlade: DPOProductNewProjectsToIncludeInWorkspaceDlg::on_button_select_all <event_handler>
    warn "Event handler (on_button_select_all) not implemented";
    $event->Skip;
    # end wxGlade
}


sub on_button_deselect_all
{
    my ($self, $event) = @_;

    my $i = -1;
    for ( ;; )
    {
        $i = $self->{list_ctrl_new_projects}->GetNextItem($i,
                                    Wx::wxLIST_NEXT_ALL,
                                    Wx::wxLIST_STATE_DONTCARE);
        if ( $i == -1 )
        {
            last;
        }

        $self->{list_ctrl_new_projects}->SetItemState($i, 0, wxLIST_STATE_SELECTED);
    }

    return;

    # wxGlade: DPOProductNewProjectsToIncludeInWorkspaceDlg::on_button_deselect_all <event_handler>
    warn "Event handler (on_button_deselect_all) not implemented";
    $event->Skip;
    # end wxGlade
}

# end of class DPOProductNewProjectsToIncludeInWorkspaceDlg

1;

