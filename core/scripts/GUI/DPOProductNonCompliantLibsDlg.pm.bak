# generated by wxGlade 0.6.8 on Thu Feb 18 09:56:00 2016
#
# To get wxPerl visit http://wxPerl.sourceforge.net/
#

use Wx 0.15 qw[:allclasses];
use strict;
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package DPOProductNonCompliantLibsDlg;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;
use Wx::Locale 'gettext' => '_T', 'gettext_noop' => 'gettext_noop';


sub new {
    my( $self, $lib_ids_ref, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: DPOProductNonCompliantLibsDlg::new
    $style = wxDEFAULT_DIALOG_STYLE 
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->{text_ctrl_product} = Wx::TextCtrl->new($self, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    $self->{sizer_157_staticbox} = Wx::StaticBox->new($self, wxID_ANY, _T("Product") );
    $self->{list_ctrl_non_compliant_libs} = Wx::ListCtrl->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxLC_SINGLE_SEL|wxSUNKEN_BORDER);
    $self->{button_select} = Wx::Button->new($self, wxID_ANY, _T("Select"));
    $self->{button_cancel} = Wx::Button->new($self, wxID_ANY, _T("Cancel"));

    $self->__set_properties();
    $self->__do_layout();

    Wx::Event::EVT_BUTTON($self, $self->{button_select}->GetId, \&on_button_select);
    Wx::Event::EVT_BUTTON($self, $self->{button_cancel}->GetId, \&on_button_cancel);

    # end wxGlade

    $self->{selected_lib_id} = "";

    $self->create_list_ctrl($lib_ids_ref);

    return $self;

}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: DPOProductNonCompliantLibsDlg::__set_properties
    $self->SetTitle(_T("Non compliant libs in the product"));
    $self->{text_ctrl_product}->SetMinSize(Wx::Size->new(200, -1));
    $self->{list_ctrl_non_compliant_libs}->SetMinSize(Wx::Size->new(325, 420));
    # end wxGlade
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: DPOProductNonCompliantLibsDlg::__do_layout
    $self->{sizer_156} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_158} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_157_staticbox}->Lower();
    $self->{sizer_157} = Wx::StaticBoxSizer->new($self->{sizer_157_staticbox}, wxHORIZONTAL);
    $self->{sizer_157}->Add($self->{text_ctrl_product}, 0, 0, 0);
    $self->{sizer_156}->Add($self->{sizer_157}, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    $self->{sizer_156}->Add($self->{list_ctrl_non_compliant_libs}, 1, wxALL|wxEXPAND, 5);
    $self->{sizer_158}->Add($self->{button_select}, 0, 0, 0);
    $self->{sizer_158}->Add($self->{button_cancel}, 0, wxLEFT, 5);
    $self->{sizer_156}->Add($self->{sizer_158}, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    $self->SetSizer($self->{sizer_156});
    $self->{sizer_156}->Fit($self);
    $self->Layout();
    # end wxGlade
}

sub create_list_ctrl
{
    my ($self, $lib_ids_ref) = @_;

    my $col = Wx::ListItem->new();
    $col->SetId(0);
    $col->SetText("Lib id");
    $col->SetWidth(220);
    $self->{list_ctrl_non_compliant_libs}->InsertColumn(0, $col);

    my $i = 0;
    foreach my $lib_id (@{$lib_ids_ref})
    {
        my $item = Wx::ListItem->new();

        $item->SetId($i);
        $item->SetText($lib_id);
        $self->{list_ctrl_non_compliant_libs}->InsertItem( $item );
        $i++;
    }
}

############### Eeeeeeeeeeeeeeevent handlers

sub on_button_select
{
    my ($self, $event) = @_;

    my $i = -1;
    for ( ;; )
    {
        $i = $self->{list_ctrl_non_compliant_libs}->GetNextItem($i,
                                    Wx::wxLIST_NEXT_ALL,
                                    Wx::wxLIST_STATE_SELECTED);
        if ( $i == -1 )
        {
            last;
        }

        $self->{selected_lib_id} = $self->{list_ctrl_non_compliant_libs}->GetItemText($i);
    }

    $self->EndModal(Wx::wxID_OK);

    return;

    # wxGlade: DPOProductNonCompliantLibsDlg::on_button_select <event_handler>
    warn "Event handler (on_button_select) not implemented";
    $event->Skip;
    # end wxGlade
}


sub on_button_cancel
{
    my ($self, $event) = @_;

    $self->EndModal(Wx::wxID_CANCEL);

    return;

    # wxGlade: DPOProductNonCompliantLibsDlg::on_button_cancel <event_handler>
    warn "Event handler (on_button_cancel) not implemented";
    $event->Skip;
    # end wxGlade
}


# end of class DPOProductNonCompliantLibsDlg

1;

