# generated by wxGlade 0.6.8 on Wed May 27 09:29:27 2015
#
# To get wxPerl visit http://wxPerl.sourceforge.net/
#

use Wx 0.15 qw[:allclasses];
use strict;
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package DPOProductHighlightDlg;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;
use Wx::Locale 'gettext' => '_T', 'gettext_noop' => 'gettext_noop';
use List::MoreUtils;


sub new {
    my( $self, $panel_product, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: DPOProductHighlightDlg::new
    $style = wxDEFAULT_DIALOG_STYLE 
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->{label_info} = Wx::StaticText->new($self, wxID_ANY, _T("Select modules you want to highlight."), wxDefaultPosition, wxDefaultSize, );
    $self->{list_ctrl_modules} = Wx::ListCtrl->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxLC_SORT_ASCENDING|wxSUNKEN_BORDER);
    $self->{button_highlight} = Wx::Button->new($self, wxID_ANY, _T("Highlight"));
    $self->{button_cancel_highlight} = Wx::Button->new($self, wxID_ANY, _T("Cancel highlight"));
    $self->{button_cancel} = Wx::Button->new($self, wxID_ANY, _T("Cancel"));

    $self->__set_properties();
    $self->__do_layout();

    Wx::Event::EVT_BUTTON($self, $self->{button_highlight}->GetId, \&on_button_highlight);
    Wx::Event::EVT_BUTTON($self, $self->{button_cancel_highlight}->GetId, \&on_button_cancel_highlight);
    Wx::Event::EVT_BUTTON($self, $self->{button_cancel}->GetId, \&on_button_cancel);

    # end wxGlade

    $self->{panel_product} = $panel_product;
    $self->{selection} = [];

    $self->create_list_ctrl();

    return $self;

}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: DPOProductHighlightDlg::__set_properties
    $self->SetTitle(_T("Highlight modules"));
    $self->{list_ctrl_modules}->SetMinSize(Wx::Size->new(400, 200));
    # end wxGlade

    $self->{list_ctrl_modules}->SetMinSize(Wx::Size->new(200, 400));
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: DPOProductHighlightDlg::__do_layout
    $self->{sizer_63} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_64} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_63}->Add($self->{label_info}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    $self->{sizer_63}->Add($self->{list_ctrl_modules}, 1, wxALL|wxEXPAND, 5);
    $self->{sizer_64}->Add($self->{button_highlight}, 0, wxALL, 5);
    $self->{sizer_64}->Add($self->{button_cancel_highlight}, 0, wxALL, 5);
    $self->{sizer_64}->Add($self->{button_cancel}, 0, wxALL, 5);
    $self->{sizer_63}->Add($self->{sizer_64}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 10);
    $self->SetSizer($self->{sizer_63});
    $self->{sizer_63}->Fit($self);
    $self->Layout();
    # end wxGlade
}

sub create_list_ctrl
{
    my ($self) = @_;

    my $col = Wx::ListItem->new();
    $col->SetId(0);
    $col->SetText("Module");
    $col->SetWidth(200);
    $self->{list_ctrl_modules}->InsertColumn(0, $col);

    my @all_projects;
    $self->get_all_projects($self->{panel_product}->{loaded_projects}, \@all_projects);

    my @item_text;
    foreach my $x (@all_projects)
    {
        if (!List::MoreUtils::any {$_ eq "$x->{name}-$x->{target_version}"} @item_text)
        {
            push(@item_text, "$x->{name}-$x->{target_version}");
        }
    }

    #~ foreach my $x (sort {lc($a) cmp lc($b)} @item_text)
    foreach my $x (@item_text)
    {
        my $item = Wx::ListItem->new();
        $item->SetText($x);

        $self->{list_ctrl_modules}->InsertItem( $item );
    }
}

sub get_all_projects
{
    my ($self, $projects_ref, $all_projects_ref) = @_;

    foreach my $x (@{$projects_ref})
    {
        my $proj;
        $self->{panel_product}->get_project($x->{name}, \$proj);

        if (!List::MoreUtils::any {"$_->{name}-$_->{version}" eq "$proj->{name}-$proj->{version}"} @{$all_projects_ref})
        {
            push(@$all_projects_ref, $proj);
        }

        if (!List::MoreUtils::any {"$_->{name}-$_->{target_version}" eq "$proj->{name}-$proj->{target_version}"} @{$all_projects_ref})
        {
            push(@$all_projects_ref, $proj);
        }

        my @deps = (@{$proj->relevant_deps()});
        $self->get_all_projects(\@deps, $all_projects_ref);
    }
}

#eeeeeeeeeeeeevent handlers

sub on_button_highlight
{
    my ($self, $event) = @_;

    my $i = -1;
    for ( ;; )
    {
        $i = $self->{list_ctrl_modules}->GetNextItem($i,
                                    Wx::wxLIST_NEXT_ALL,
                                    Wx::wxLIST_STATE_SELECTED);
        if ( $i == -1 )
        {
            last;
        }

        my $elem = $self->{list_ctrl_modules}->GetItemText($i);
        push(@{$self->{selection}}, $elem);
    }

    $self->{cancel_highlight} = 0;

    $self->EndModal(Wx::wxID_OK);

    return;

    # wxGlade: DPOProductHighlightDlg::on_button_highlight <event_handler>
    warn "Event handler (on_button_highlight) not implemented";
    $event->Skip;
    # end wxGlade
}


sub on_button_cancel
{
    my ($self, $event) = @_;

    $self->EndModal(Wx::wxID_CANCEL);

    return;

    # wxGlade: DPOProductHighlightDlg::on_button_cancel <event_handler>
    warn "Event handler (on_button_cancel) not implemented";
    $event->Skip;
    # end wxGlade
}



sub on_button_cancel_highlight
{
    my ($self, $event) = @_;

    my $i = -1;
    for ( ;; )
    {
        $i = $self->{list_ctrl_modules}->GetNextItem($i,
                                    Wx::wxLIST_NEXT_ALL,
                                    Wx::wxLIST_STATE_SELECTED);
        if ( $i == -1 )
        {
            last;
        }

        my $elem = $self->{list_ctrl_modules}->GetItemText($i);
        push(@{$self->{selection}}, $elem);
    }

    $self->{cancel_highlight} = 1;

    $self->EndModal(Wx::wxID_OK);

    return;

    # wxGlade: DPOProductHighlightDlg::on_button_cancel_highlight <event_handler>
    warn "Event handler (on_button_cancel_highlight) not implemented";
    $event->Skip;
    # end wxGlade
}

# end of class DPOProductHighlightDlg

1;

