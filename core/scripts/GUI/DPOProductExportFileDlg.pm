# generated by wxGlade 0.6.8 on Tue Mar 10 09:01:25 2015
#
# To get wxPerl visit http://wxPerl.sourceforge.net/
#

use Wx 0.15 qw[:allclasses];
use strict;
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package DPOProductExportFileDlg;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;
use Wx::Locale 'gettext' => '_T', 'gettext_noop' => 'gettext_noop';


sub new {
    my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: DPOProductExportFileDlg::new
    $style = wxDEFAULT_DIALOG_STYLE 
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->{label_info} = Wx::StaticText->new($self, wxID_ANY, _T("What export file is...\n"), wxDefaultPosition, wxDefaultSize, );
    $self->{radio_btn_mpc_ace} = Wx::RadioButton->new($self, wxID_ANY, _T("MPC (ACE)"), wxDefaultPosition, wxDefaultSize, );
    $self->{radio_btn_mpc} = Wx::RadioButton->new($self, wxID_ANY, _T("MPC"), wxDefaultPosition, wxDefaultSize, );
    $self->{button_ok} = Wx::Button->new($self, wxID_ANY, _T("Ok"));

    $self->__set_properties();
    $self->__do_layout();

    Wx::Event::EVT_BUTTON($self, $self->{button_ok}->GetId, \&on_button_ok);

    # end wxGlade

    my $path = "\$(ACE_ROOT)";
    if (!DPOEnvVars::expand_env_var(\$path))
    {
        $self->{radio_btn_mpc_ace}->SetLabel("MPC (ACE)  (ACE_ROOT is not defined)");
        $self->{radio_btn_mpc_ace}->Enable(0);
        $self->{radio_btn_mpc}->SetValue(1);
    }

    $self->EnableCloseButton(0);

    $self->{button_ok}->SetDefault();

    return $self;
}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: DPOProductExportFileDlg::__set_properties
    $self->SetTitle(_T("Export file"));
    # end wxGlade

    $self->{label_info}->SetLabel(
                "Library can be static or dynamic.\n\n".
                "For dynamic library in Windows we must use __declspec(dllexport) to export symbols.\n\n".
                "The DPO prefered approach is to use MPC specialized for ACE.\n".
                "It generates macros that wrap __declspec(dllexport) and provides more\n".
                "(for example: singleton). However, the project must be linked with ACE.\n\n".
                "Another approach is to use MPC alone that defines macros in a minimal way.\n\n".
                "Please select the approach you prefer.");
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: DPOProductExportFileDlg::__do_layout
    $self->{sizer_26} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_27} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_26}->Add($self->{label_info}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    $self->{sizer_27}->Add($self->{radio_btn_mpc_ace}, 0, wxALL, 5);
    $self->{sizer_27}->Add($self->{radio_btn_mpc}, 0, wxALL, 5);
    $self->{sizer_26}->Add($self->{sizer_27}, 1, wxBOTTOM|wxALIGN_CENTER_HORIZONTAL, 10);
    $self->{sizer_26}->Add($self->{button_ok}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    $self->SetSizer($self->{sizer_26});
    $self->{sizer_26}->Fit($self);
    $self->Layout();
    # end wxGlade

}

sub on_button_ok
{
    my ($self, $event) = @_;

    $self->EndModal(Wx::wxID_OK);

    return;

    # wxGlade: DPOProductExportFileDlg::on_button_ok <event_handler>
    warn "Event handler (on_button_ok) not implemented";
    $event->Skip;
    # end wxGlade
}


# end of class DPOProductExportFileDlg

1;

